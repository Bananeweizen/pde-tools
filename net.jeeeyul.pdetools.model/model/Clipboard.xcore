@GenModel(basePackage="net.jeeeyul.pdetools.clipboard.model")
@Ecore(nsURI="http://jeeeyul.net/pde-tools/clipboard", nsPrefix="cb")
package clipboard


import java.util.Date
import org.eclipse.swt.dnd.Clipboard
import java.util.ArrayList
import org.eclipse.swt.dnd.Transfer
import org.eclipse.swt.dnd.TextTransfer
import org.eclipse.swt.dnd.RTFTransfer
import org.eclipse.swt.graphics.ImageData
import org.eclipse.core.resources.IFile
import org.eclipse.core.resources.ResourcesPlugin
import org.eclipse.core.resources.IFolder
import org.eclipse.core.runtime.Path
import net.jeeeyul.pdetools.shared.ImageDataSerializer

type IFile wraps IFile create
{
	ResourcesPlugin::workspace.root.getFile(new Path(it) )
}
convert
{
	it.fullPath.toPortableString
}

type IFolder wraps IFolder create
{ 
	ResourcesPlugin::workspace.root.getFolder(new Path(it))
}
convert
{
	it.fullPath.toPortableString
}

type ImageData wraps ImageData
create{
	ImageDataSerializer::deserialize(it)
}
convert{
	ImageDataSerializer::serialize(it)
}

type Clipboard wraps Clipboard

class ClipboardElement{
	
}

class ClipHistory extends ClipboardElement{
	contains ClipboardEntry[] entries opposite parent
} 

class ClipboardEntry extends ClipboardElement{
	int usingCount
	Date lastUsedTime
	String textContent
	String rtfContent
	Date takenTime
	String partId
	IFile releatedFile
	
	container ClipHistory parent opposite entries 
	contains TextRange textRange
	contains JavaInfo javaInfo
	
	op void transferTo(Clipboard clipboard){
		var transferList = new ArrayList<Transfer>
		var dataList = new ArrayList<Object>
		
		if(textContent != null){
			transferList += TextTransfer::instance
			dataList += textContent
		}
		
		if(rtfContent != null){
			transferList += RTFTransfer::instance
			dataList += rtfContent
		}
		
		clipboard.setContents(dataList, transferList)
	}
	
	op void increaseUsing(){
		usingCount = usingCount + 1
		lastUsedTime = new Date()
	}
}

class TextRange extends ClipboardElement{
	int offset
	int length
	int startLine
	int endLine
}

class JavaInfo extends ClipboardElement{
	String qualifiedTypeName
	String enclosingElementName
}
